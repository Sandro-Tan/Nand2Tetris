// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {

		return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		return Memory.peek(24576);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
		var char c;
		
		// Set the cursor before there is any keyboard input
		do Output.printChar(0);
		
		// Waits until a key is pressed
		while (Keyboard.keyPressed() = c) {}
		let c = Keyboard.keyPressed();

		
		// Waits until the key is released
		while (Keyboard.keyPressed() > 0) {}
		
		// Erase the cursur already drawed
		do Output.backSpace();
		
		// Draw the current key, and a new cursor will follow
		do Output.printChar(c);

		
		return c;
    
	}

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
		var String str;
		var int c;
		var boolean end;
		
		// 100 is a number large enough to fit the input length
		let str = String.new(100);

		do Output.printString(message);
		let end = false;

		
		while (~end) {
			let c = Keyboard.readChar();
			
			// If key == ENTER, break
			if (c = 128) {
				let end = true;
			}
			
			// If key == BACKSPACE
			if (c = 129) {
				do str.eraseLastChar();
			}
			
			// Other general keys
			if (~ ((c = 128) | (c = 129)) ) {			
				do str.appendChar(c);
			}
		}
		
		return str;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
		var String str;
		var char c;
		var boolean end;
		
		let str = String.new(100);
		do Output.printString(message);
		let end = false;
		
		while (~end) {
			let c = Keyboard.readChar();
			if (c = 128) {let end = true;}
			if (c = 129) {do str.eraseLastChar();}
			if (~ ((c = 128) | (c = 129)) ) {do str.appendChar(c);}
		}
		
		return str.intValue();
    }
}
