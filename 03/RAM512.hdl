// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // If load==1, change all RAM64s to 'in' value
	Mux16 (a=outcopy, b=in, sel=load, out=out0);
	
	// Select a single RAM64
	DMux8Way (in=load, sel=address[6..8], a=ram0, b=ram1, c=ram2, d=ram3, e=ram4, f=ram5, g=ram6, h=ram7);
	
	
	// RAM array of 8 RAM64s
    RAM64 (in=out0, load=ram0, address=address[0..5], out=out1);
	RAM64 (in=out0, load=ram1, address=address[0..5], out=out2);
	RAM64 (in=out0, load=ram2, address=address[0..5], out=out3);
	RAM64 (in=out0, load=ram3, address=address[0..5], out=out4);
	RAM64 (in=out0, load=ram4, address=address[0..5], out=out5);
	RAM64 (in=out0, load=ram5, address=address[0..5], out=out6);
	RAM64 (in=out0, load=ram6, address=address[0..5], out=out7);
	RAM64 (in=out0, load=ram7, address=address[0..5], out=out8);
	
	// Select a single RAM64 to read
	Mux8Way16 (a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[6..8], out=outcopy, out=out);
}